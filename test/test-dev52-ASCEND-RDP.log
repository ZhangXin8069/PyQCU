
    @@@@@@######QCU NOTES START######@@@@@@@
    Guide:
    0. Required: MPI(e.g. 4.1.2), CUDA(e.g. 12.4), CMAKE(e.g. 3.22.1), GCC(e.g. 11.4.0), HDF5-MPI(e.g. 1.10.7,'apt install libhdf5-mpi-dev && export HDF5_MPI="ON" && pip install --no-binary=h5py h5py').
    1. The libqcu.so was compiled when pyqcu setup in download_path/PyQCU/lib, please add this path to your LD_LIBRARY_PATH.
    2. The QCU(PyQCU) splite grid by x->y->z->t, lattice by x->y->z->t->p->d->c->c or x->y->z->t->c->s(->p) and x->y->z->t->c->s->c->s(->p).
    3. The QUDA(PyQUDA) splite grid by t->z->y->x, lattice by c->c->x->y->z->t->p->d or c->s->x->y->z->t(->p) and c->s->c->s->x->y->z->t(->p).
    4. The QCU input params in numpy array(dtype=np.int32), argv in  numpy array(dtype=np.float32 or float64) array, set_ptrs in numpy array(dtype=np.int64), other in cupy array(dtype=cp.complex64 or complex128).
    5. The smallest lattice size is (wilson:x=4,y=4,z=4,t=4;clover:x=8,y=8,z=8,t=8) that QCU support (when '#define _BLOCK_SIZE_ 32 // for test small lattice').
    References:
    [0] 刘川. 格点量子色动力学导论. 北京大学出版社, 2017.07.
    [1] 蒋翔宇. 轻强子性质的格点QCD研究. 中国科学院高能物理研究所, 2023.06.
    [2] Babich R, Clark M A, Joó B. Parallelizing the QUDA library for multi-GPU calculations in lattice quantum chromodynamics[C]//SC'10: Proceedings of the 2010 ACM/IEEE International Conference for High Performance Computing, Networking, Storage and Analysis. IEEE, 2010.01.11.
    [3] M. Rottmann. Adaptive domain decomposition multigrid for lattice QCD, Ph.D. thesis, Wuppertal, Univ., Diss., 2016.
    [4] Brower R C, Clark M A, Weinberg E, et al. Multigrid for chiral lattice fermions: Domain wall[J]. Physical Review D, 2020.
    @@@@@@######QCU NOTES END######@@@@@@@
    
Using device: cuda
fine_vec.shape:torch.Size([4, 3, 8, 8, 8, 4])
fine_vec.flatten()[:100]:tensor([ 0.4643+0.1031j,  0.8712-0.2586j,  0.2595+0.4565j, -0.3349-0.0295j,
         0.0640-1.6999j,  0.4130-1.2870j, -0.4077+0.9066j,  0.1730-0.6647j,
        -0.1952-0.4882j, -0.0151-0.0825j, -0.1464+0.2186j, -1.0219-0.2655j,
         0.4601-1.5963j, -0.3385+0.3858j, -0.4454+0.1916j, -0.3609-0.0513j,
        -0.6627+0.2068j, -1.3443+0.9805j,  0.7396+1.8628j,  0.2669+0.4190j,
        -0.2609+0.9451j,  0.3536+0.2635j,  0.4368+0.3432j, -1.2971+0.0590j,
         0.9812+1.4851j, -0.8035-0.1142j, -0.4788-0.1865j, -0.4911-1.5880j,
         0.3672-0.5872j, -1.5182+0.2661j,  0.4412-0.4267j, -0.7868+0.3066j,
         0.2061-1.7920j, -0.3808+0.3052j,  0.2987+0.6385j,  0.7461-0.1492j,
         0.8666-0.9984j, -0.8732+0.3727j,  0.8360-0.5176j, -0.8867-1.2927j,
         0.5880+0.9771j,  0.7565+0.1159j, -0.4063-0.9705j, -0.3780+0.4966j,
         1.3592+1.1427j,  0.4534+0.8672j,  0.3232+0.1854j, -1.4343-0.2417j,
        -0.3636+0.1389j,  0.0161-0.3515j,  0.4020-0.1002j,  0.4309-1.7457j,
        -0.3877-0.9788j, -0.5422-0.3946j, -0.3261-0.1453j, -0.3942-2.4689j,
         0.5494+1.0967j, -0.3839-0.6078j, -0.3642-0.4850j,  0.0904+1.0835j,
        -0.7155+0.6816j,  1.0893-0.3666j,  0.3683-0.8171j, -1.5309+1.1985j,
         0.7922+0.2155j,  0.2394-0.6397j, -0.4575-0.3287j,  0.3112-0.7761j,
         0.2729-0.1036j, -0.8354-0.8811j, -0.3787-0.4872j,  0.3913-0.4588j,
        -0.2507-0.0758j, -0.6388-0.4980j, -1.0057-0.1863j,  0.6940-1.1912j,
        -0.0411-0.0756j, -0.2410+0.4827j,  1.5738+1.0207j, -0.1869-0.8835j,
        -0.0111-0.9700j, -0.0419+1.3146j, -0.2098+1.0052j, -0.5783+0.4192j,
         0.1410+0.5706j,  0.1833+0.4724j,  1.9324+1.1479j, -0.7407+0.3171j,
        -0.1259-0.0533j, -0.2279+0.9431j, -1.0361+1.4787j, -0.0605+0.3848j,
        -1.1950+0.1238j, -0.1027+0.1914j, -1.7507-0.1854j, -0.6935-1.2597j,
         0.1270+0.7912j, -0.3906-0.7615j,  1.1227+0.6075j,  0.2977-1.3346j],
       device='cuda:0')
shape,dof,local_latt_size:(torch.Size([12, 4, 3, 2, 4, 2, 4, 2, 4, 2, 2]), 12, torch.Size([2, 4, 2, 4, 2, 4, 2, 2]))
fine_vec.shape != shape[1:]!!!
EscTtZzYyXx,scTtZzYyXx->ETZYX
coarse_vec.shape:torch.Size([12, 2, 2, 2, 2])
coarse_vec.flatten()[:100]:tensor([-1.5422+1.1962j, -0.0480-0.8793j, -0.0459-0.0767j,  0.3061-0.2001j,
        -0.0658+0.3208j, -0.4043-0.4029j, -0.1508-0.5815j, -0.3149-0.8285j,
        -1.1515+0.6976j,  0.3146-0.3164j, -1.3484-0.5124j,  0.8858+1.1115j,
        -0.2929+1.6345j, -0.2165+0.5728j, -0.0689-0.9183j,  0.4993+0.0837j,
        -0.2335-0.0511j,  0.0986+0.6934j,  0.1932-0.6146j, -0.1283+0.4645j,
         0.4077+0.1932j,  0.9845-0.4552j, -0.4636-0.2934j, -1.0614+0.2133j,
         1.0866+0.3585j, -0.2690+0.0209j, -0.1694-0.5541j, -0.7480+0.2362j,
         1.4044-0.5189j, -0.5559+0.7387j, -0.6603-1.4621j,  0.9632+0.4913j,
         0.3022+0.8212j,  1.1931-0.8262j, -0.2636-0.7902j,  0.6105-0.3651j,
        -0.8216+0.1117j, -1.1956+0.9452j, -0.4715+0.6197j,  1.2113-0.3215j,
        -0.5889+0.2652j, -0.0673-0.4757j,  0.2492-0.9549j, -0.1432+0.3883j,
         0.2059+0.1504j,  0.4346+0.0327j, -0.7030-0.1448j, -0.7027-0.5059j,
        -1.1944-0.6602j, -0.4415+0.5162j,  0.6486-0.9884j, -0.7205+0.6111j,
        -1.5863+1.3840j,  0.2977-0.3196j, -0.3803-0.1363j,  0.4647-0.3339j,
        -0.1521-1.3188j, -1.6543-0.2320j, -0.9000-0.0225j, -0.7750+0.3706j,
        -0.9531-0.0538j, -1.0822-0.2611j,  0.1239+0.3930j, -1.1443+0.0938j,
         0.9366-0.6575j, -0.5446+0.5821j,  0.2689-0.6239j,  1.0163-0.2692j,
         0.2447+0.0685j, -0.2751-0.5372j, -0.6054-0.0136j, -0.2141-0.9560j,
         0.8758+0.6295j,  0.0937+0.9917j, -0.3764+0.5258j,  0.4985-0.5917j,
         0.0580-0.4583j, -0.0309-0.1645j, -1.0209-0.4854j, -1.3342+0.2867j,
        -0.5314-0.3455j,  0.2215-0.3286j,  0.5340-0.5725j, -0.3634+0.6505j,
        -0.4537+0.4407j,  0.5229-0.5271j, -0.0812+0.4392j, -1.2526+0.9867j,
         0.5280+1.2110j,  0.9947+0.9126j,  1.3957+1.0245j,  1.1696-0.1817j,
         0.1587+0.6211j, -0.9856-0.5559j, -0.8277-0.1737j, -0.5247-0.9879j,
        -0.1661+0.6153j, -0.1725+0.6761j,  0.2918+0.6458j,  0.8317+0.1714j],
       device='cuda:0')
shape,dof,local_latt_size:(torch.Size([12, 4, 3, 2, 4, 2, 4, 2, 4, 2, 2]), 12, torch.Size([2, 4, 2, 4, 2, 4, 2, 2]))
fine_vec.shape != shape[1:]!!!
shape[0:1]+shape[-8:][::2]:torch.Size([12, 2, 2, 2, 2])
EscTtZzYyXx, ETZYX->scTtZzYyXx
_fine_vec.shape:torch.Size([4, 3, 8, 8, 8, 4])
_fine_vec.flatten()[:100]:tensor([ 0.1317-0.0820j,  0.1320-0.0904j,  0.0073+0.0306j, -0.0026+0.0496j,
         0.1036-0.1045j,  0.1064-0.1044j,  0.0036+0.0536j, -0.0007+0.0362j,
         0.1182-0.1032j,  0.1108-0.0989j,  0.0019+0.0437j, -0.0014+0.0491j,
         0.1079-0.1028j,  0.1130-0.0980j,  0.0067+0.0459j,  0.0068+0.0534j,
        -0.0558+0.0047j, -0.0631+0.0036j, -0.0559-0.0407j, -0.0350-0.0392j,
        -0.0655+0.0012j, -0.0545+0.0028j, -0.0286-0.0425j, -0.0476-0.0314j,
        -0.0509+0.0012j, -0.0516-0.0054j, -0.0322-0.0406j, -0.0261-0.0244j,
        -0.0416+0.0118j, -0.0343+0.0036j, -0.0321-0.0391j, -0.0228-0.0408j,
         0.1039-0.0950j,  0.1063-0.0797j, -0.0130+0.0401j, -0.0097+0.0485j,
         0.0956-0.0938j,  0.1027-0.0885j, -0.0074+0.0443j, -0.0006+0.0425j,
         0.1237-0.1052j,  0.1204-0.0625j,  0.0030+0.0413j,  0.0077+0.0303j,
         0.1151-0.1056j,  0.1029-0.0784j,  0.0213+0.0509j,  0.0215+0.0385j,
        -0.0458-0.0196j, -0.0544-0.0220j, -0.0441-0.0393j, -0.0380-0.0398j,
        -0.0439-0.0318j, -0.0509-0.0258j, -0.0530-0.0359j, -0.0490-0.0502j,
        -0.0355-0.0368j, -0.0433-0.0437j, -0.0348-0.0453j, -0.0421-0.0390j,
        -0.0450-0.0338j, -0.0219-0.0137j, -0.0423-0.0491j, -0.0509-0.0465j,
         0.1069-0.0955j,  0.1009-0.1047j, -0.0107+0.0482j, -0.0116+0.0482j,
         0.0957-0.0854j,  0.0963-0.1131j, -0.0061+0.0418j,  0.0035+0.0350j,
         0.1277-0.1124j,  0.1111-0.0797j, -0.0053+0.0464j,  0.0010+0.0428j,
         0.1195-0.0964j,  0.1364-0.0932j,  0.0032+0.0498j,  0.0048+0.0487j,
        -0.0450-0.0268j, -0.0497-0.0188j, -0.0491-0.0404j, -0.0277-0.0487j,
        -0.0547-0.0393j, -0.0455-0.0260j, -0.0404-0.0354j, -0.0538-0.0441j,
        -0.0410-0.0483j, -0.0255-0.0296j, -0.0499-0.0361j, -0.0498-0.0402j,
        -0.0430-0.0438j, -0.0296-0.0198j, -0.0483-0.0528j, -0.0578-0.0522j,
         0.0964-0.1062j,  0.0761-0.1003j,  0.0088+0.0443j, -0.0063+0.0498j],
       device='cuda:0')
(fine_vec/_fine_vec).flatten()[:100]:tensor([  2.1897+2.1447j,   5.4066+1.7448j,  16.0363-4.6535j,
         -0.2456+6.7630j,   8.5081-7.8212j,   8.0218-4.2250j,
         16.3163+8.6940j, -18.4273-4.4003j,   1.1090-3.1607j,
          0.2940-0.4820j,   4.8501+3.5659j,  -4.8236+20.9664j,
          9.6241-5.6286j,  -3.3995+0.4656j,   2.7069+10.1064j,
         -1.7908+6.5263j,  12.0956-2.6812j,  22.0982-14.2871j,
        -24.5122-15.5000j,  -9.3348-1.5147j,   4.2545-14.3414j,
         -6.2179-5.1545j, -10.3204+3.3419j,  18.4122-13.3819j,
        -18.5660-29.6536j,  15.6413+0.5813j,   8.5575-5.0075j,
         40.3698+23.0568j, -11.8659+10.7503j,  44.6338-3.0358j,
          0.9759+12.0987j,   2.4610-17.8911j,   9.6703-8.4034j,
         -3.6697+0.1189j,  12.2298-11.4067j,  -5.9332-14.2068j,
          9.8403-0.7874j,  -6.6730-2.1208j, -14.4063-16.4566j,
        -30.1134+21.2452j,  -1.1384+6.9287j,   4.5552+3.3275j,
        -24.0990+8.0689j,  12.4376+15.6158j,   1.4656+11.2756j,
         -1.2730+7.4555j,   5.3604-4.1000j, -20.6528+25.7453j,
          5.6173-5.4327j,   1.9935+5.6542j,  -3.9571+5.7946j,
         17.5524+27.5718j,  16.4016+10.4137j,  11.6050+1.8647j,
          5.4909-0.9818j,  29.1131+20.5472j, -22.8843-7.1391j,
         11.4207+2.5212j,  10.6158+0.1106j, -13.9923-12.7788j,
          2.8900-17.3109j, -28.2082+34.3415j,   5.8354+12.5288j,
          4.6578-27.8251j,   3.1185+4.8026j,   4.3106-1.8668j,
         -4.4924+10.4784j, -16.7047-2.4497j,   2.1244+0.8145j,
          0.8701-8.1267j, -10.1081+10.5498j, -11.8607-12.3648j,
         -0.8122-1.3082j,  -1.6729-5.6823j,  -1.5400+21.8703j,
        -27.4521-16.8512j,   0.1006-0.5516j,  -2.8523+1.5892j,
         22.4538-30.1478j, -18.3316+2.0384j,   9.6508+15.7958j,
         -8.0092-23.4282j,  -7.5039-14.3040j,  -1.3975-12.6633j,
         -6.6448-5.6613j,  -7.5097-6.0864j, -41.1385+7.5975j,
          5.3500-10.2828j,   1.9268-0.9699j, -14.4865-20.2077j,
         -0.4516-29.3294j,  -3.0382-5.2731j,  12.1906-15.2999j,
         -0.5864-6.0680j,  18.4250-16.3068j,  17.4560+6.0387j,
         -3.4886+4.3627j,   2.9456-6.1286j,  18.0332-21.7450j,
        -27.1420-2.5678j], device='cuda:0')
shape,dof,local_latt_size:(torch.Size([12, 4, 3, 2, 4, 2, 4, 2, 4, 2, 2]), 12, torch.Size([2, 4, 2, 4, 2, 4, 2, 2]))
fine_vec.shape != shape[1:]!!!
EscTtZzYyXx,scTtZzYyXx->ETZYX
_coarse_vec.shape:torch.Size([12, 2, 2, 2, 2])
_coarse_vec.flatten()[:100]:tensor([-1.5422+1.1962j, -0.0480-0.8793j, -0.0459-0.0767j,  0.3061-0.2001j,
        -0.0658+0.3208j, -0.4043-0.4029j, -0.1508-0.5815j, -0.3149-0.8285j,
        -1.1515+0.6976j,  0.3146-0.3164j, -1.3484-0.5124j,  0.8858+1.1115j,
        -0.2929+1.6345j, -0.2165+0.5728j, -0.0689-0.9183j,  0.4993+0.0837j,
        -0.2335-0.0511j,  0.0986+0.6934j,  0.1932-0.6145j, -0.1283+0.4645j,
         0.4077+0.1932j,  0.9845-0.4552j, -0.4636-0.2934j, -1.0614+0.2133j,
         1.0866+0.3585j, -0.2690+0.0209j, -0.1694-0.5541j, -0.7480+0.2362j,
         1.4044-0.5189j, -0.5559+0.7387j, -0.6603-1.4621j,  0.9632+0.4913j,
         0.3022+0.8212j,  1.1931-0.8262j, -0.2636-0.7902j,  0.6105-0.3651j,
        -0.8216+0.1117j, -1.1956+0.9452j, -0.4715+0.6197j,  1.2113-0.3215j,
        -0.5889+0.2652j, -0.0673-0.4757j,  0.2492-0.9549j, -0.1432+0.3883j,
         0.2059+0.1504j,  0.4346+0.0327j, -0.7030-0.1448j, -0.7027-0.5059j,
        -1.1944-0.6602j, -0.4415+0.5162j,  0.6486-0.9884j, -0.7205+0.6111j,
        -1.5863+1.3840j,  0.2977-0.3196j, -0.3803-0.1363j,  0.4647-0.3339j,
        -0.1521-1.3188j, -1.6543-0.2320j, -0.9000-0.0225j, -0.7750+0.3706j,
        -0.9531-0.0538j, -1.0822-0.2611j,  0.1239+0.3930j, -1.1443+0.0938j,
         0.9366-0.6575j, -0.5446+0.5821j,  0.2689-0.6239j,  1.0163-0.2692j,
         0.2447+0.0685j, -0.2751-0.5372j, -0.6054-0.0136j, -0.2141-0.9560j,
         0.8758+0.6295j,  0.0937+0.9917j, -0.3764+0.5258j,  0.4985-0.5917j,
         0.0580-0.4583j, -0.0309-0.1645j, -1.0209-0.4854j, -1.3342+0.2867j,
        -0.5314-0.3455j,  0.2215-0.3286j,  0.5340-0.5725j, -0.3634+0.6505j,
        -0.4537+0.4407j,  0.5229-0.5271j, -0.0812+0.4392j, -1.2526+0.9867j,
         0.5280+1.2110j,  0.9947+0.9126j,  1.3957+1.0245j,  1.1696-0.1817j,
         0.1587+0.6211j, -0.9856-0.5559j, -0.8277-0.1737j, -0.5247-0.9879j,
        -0.1661+0.6153j, -0.1725+0.6761j,  0.2918+0.6458j,  0.8317+0.1714j],
       device='cuda:0')
(coarse_vec/_coarse_vec).flatten()[:100]:tensor([1.0000+2.6287e-08j, 1.0000-1.5837e-07j, 1.0000+5.7629e-06j,
        1.0000+3.1355e-07j, 1.0000-1.1129e-06j, 1.0000+2.1778e-07j,
        1.0000-1.1358e-06j, 1.0000+2.1731e-07j, 1.0000+9.9161e-07j,
        1.0000-3.2801e-06j, 1.0000-2.9687e-07j, 1.0000+2.4562e-07j,
        1.0000+1.9567e-07j, 1.0000-7.2593e-07j, 1.0000-7.1792e-11j,
        1.0000-2.1333e-06j, 1.0000-1.6992e-06j, 1.0000-2.1258e-07j,
        1.0000-2.0337e-07j, 1.0000+5.2311e-07j, 1.0000+1.0600e-06j,
        1.0000-2.0085e-07j, 1.0000-7.2427e-07j, 1.0000-4.6180e-07j,
        1.0000+6.1692e-07j, 1.0000-4.4019e-07j, 1.0000-1.3242e-06j,
        1.0000-2.0776e-06j, 1.0000+1.3718e-07j, 1.0000-3.8132e-08j,
        1.0000+2.1356e-07j, 1.0000-5.6618e-07j, 1.0000-5.1769e-07j,
        1.0000-1.0664e-07j, 1.0000+1.6282e-06j, 1.0000+2.4492e-09j,
        1.0000-2.6597e-07j, 1.0000+8.4605e-08j, 1.0000+1.5620e-07j,
        1.0000+5.9071e-07j, 1.0000-1.1036e-06j, 1.0000-3.4106e-06j,
        1.0000-9.2130e-07j, 1.0000+1.5506e-06j, 1.0000-2.0897e-06j,
        1.0000-5.3498e-07j, 1.0000+2.7332e-07j, 1.0000+6.5171e-07j,
        1.0000+2.8021e-07j, 1.0000+1.2739e-07j, 1.0000+1.7559e-07j,
        1.0000-3.6641e-07j, 1.0000+2.7902e-08j, 1.0000-3.0496e-07j,
        1.0000-4.8396e-06j, 1.0000+6.6653e-07j, 1.0000+1.3884e-07j,
        1.0000+6.2572e-07j, 1.0000-6.1588e-08j, 1.0000+7.8112e-07j,
        1.0000+5.0806e-08j, 1.0000+2.8805e-07j, 1.0000+1.8627e-07j,
        1.0000+1.2809e-07j, 1.0000-1.2034e-07j, 1.0000+1.6814e-07j,
        1.0000+8.1058e-07j, 1.0000-1.7766e-07j, 1.0000-2.0625e-07j,
        1.0000+3.4502e-08j, 1.0000-3.2482e-07j, 1.0000-1.8962e-07j,
        1.0000-1.1514e-07j, 1.0000-1.2819e-07j, 1.0000-1.0042e-07j,
        1.0000-5.6952e-07j, 1.0000-8.2857e-07j, 1.0000-5.6140e-08j,
        1.0000+3.8168e-08j, 1.0000+8.6907e-08j, 1.0000+5.0167e-07j,
        1.0000-6.5054e-07j, 1.0000+4.0901e-07j, 1.0000-8.0287e-07j,
        1.0000+1.5280e-07j, 1.0000-4.8268e-08j, 1.0000-7.3783e-07j,
        1.0000-7.6541e-08j, 1.0000-1.3994e-07j, 1.0000-4.7353e-07j,
        1.0000+5.6328e-08j, 1.0000-2.2076e-07j, 1.0000+2.8089e-07j,
        1.0000+1.1751e-07j, 1.0000-1.7586e-07j, 1.0000+4.4933e-08j,
        1.0000+1.7124e-07j, 1.0000+1.5036e-07j, 1.0000+2.2056e-07j,
        1.0000-3.9375e-09j], device='cuda:0')
