1. 复矩阵构建模块
Class ComplexMatrixBuilder:
    初始化(nx, ny, nz, alpha, beta, dtype):
        保存网格尺寸和系数
        计算网格步长 hx, hy, hz
        计算矩阵总规模 n = nx*ny*nz
    
    构建矩阵():
        计算拉普拉斯系数 cx, cy, cz = alpha/(h^2)
        计算主对角线元素 main_diag = 2*(cx+cy+cz) + beta
        
        初始化对角线列表和偏移量列表
        添加主对角线
        
        添加x方向邻居连接(处理边界条件)
        添加y方向邻居连接
        添加z方向邻居连接
        
        使用scipy.sparse.diags构建稀疏矩阵
        返回稀疏矩阵A
2. 基于特征向量的粗化策略
Class AMGEigenvectorCoarsening:
    初始化(num_eigenvectors, max_coarse_size, ...):
        保存粗化参数
    
    切比雪夫滤波(A, v, lambda_min, lambda_max):
        计算切比雪夫多项式参数 delta 和 sigma
        初始化递推向量 v_0 和 v_1
        对k从2到chebyshev_degree:
            v_k = 2*A'*v_{k-1} - v_{k-2} ，其中A'=(A-sigma*I)/delta
        返回滤波后的向量
    
    带切比雪夫加速的幂迭代(A, num_vectors):
        估计特征值范围 [lambda_min, lambda_max]
        对每个特征向量k:
            随机初始化向量v
            对迭代次数i:
                应用切比雪夫滤波
                与已找到的特征向量正交化
                归一化向量v
                检查收敛性
        返回排序后的特征向量
    
    基于特征向量的粗化(A):
        计算近核特征向量
        分析特征向量平滑度
        使用QR分解选择粗网格点
        调整粗网格点数量以满足粗化比例
        返回粗网格点标记数组
3. 插值算子构建
Class AMGInterpolation:
    初始化(truncation_factor, dtype):
        保存截断因子
    
    构建插值(A, c_points):
        分离粗网格点和细网格点
        对粗网格点:直接注入(插值系数为1)
        对细网格点:
            计算与邻居的连接强度
            选择强连接的粗网格邻居
            计算插值权重(基于强连接邻居的加权平均)
        构建稀疏插值矩阵P
        返回插值矩阵P
4. FGMRES 平滑器
Class FGMRESSmoother:
    初始化(max_krylov, max_restarts, tol, dtype):
        保存FGMRES参数
    
    平滑(A, b, x0):
        初始化残差 r = b - A(x0)
        归一化残差作为初始搜索方向
        对krylov子空间维度j:
            应用预条件(此处为恒等变换)
            执行Arnoldi过程构建Krylov子空间
            应用Givens旋转进行QR分解
            检查残差收敛性
        求解最小二乘问题得到校正量
        更新解向量
        返回平滑后的解
5. 主 AMG 求解器
Class AlgebraicMultigridComplex:
    初始化(...):
        初始化各组件和求解参数
    
    设置层次结构(A):
        从最细网格开始
        对每个层次:
            应用基于特征向量的粗化
            构建插值和限制算子
            构建粗网格算子 A_coarse = R*A*P
            若粗网格尺寸小于阈值或达到最大层数则停止
        返回层次结构
    
    V循环(b, x, level):
        若为最粗网格:
            使用直接法或更多次平滑求解
        否则:
            预平滑
            计算残差
            限制残差到粗网格
            递归调用V循环求解粗网格校正
            插值校正到细网格
            更新解
            后平滑
        返回更新后的解
    
    求解(A, b, x0):
        设置层次结构
        对迭代次数:
            执行V循环
            计算残差并检查收敛性
        返回解和求解时间
