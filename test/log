self.lat_size: [8, 8, 8, 8]
self.grid_size: [1, 1, 1, 1]
self.grid_index: [0, 0, 0, 0]
self.local_lat_size: [8, 8, 8, 8]
Using device: cpu
@My Rank:0/1, Local Rank:0@

Grid Index T: 0, Z: 0, Y: 0, X: 0
Grid Lat T: 8, Z: 8, Y: 8, X: 8
All Dest Shape: (4, 3, 8, 8, 8, 8)
Dest Shape: (4, 3, 8, 8, 8, 8)
Grid Index T: 0, Z: 0, Y: 0, X: 0
Grid Lat T: 8, Z: 8, Y: 8, X: 8
All Dest Shape: (4, 3, 8, 8, 8, 8)
Dest Shape: (4, 3, 8, 8, 8, 8)
Grid Index T: 0, Z: 0, Y: 0, X: 0
Grid Lat T: 8, Z: 8, Y: 8, X: 8
All Dest Shape: (3, 3, 4, 8, 8, 8, 8)
Dest Shape: (3, 3, 4, 8, 8, 8, 8)
Grid Index T: 0, Z: 0, Y: 0, X: 0
Grid Lat T: 8, Z: 8, Y: 8, X: 8
All Dest Shape: (4, 3, 4, 3, 8, 8, 8, 8)
Dest Shape: (4, 3, 4, 3, 8, 8, 8, 8)
self.dof_list:[12, 24, 24, 24, 24]
Building grid list:
  Level 0: 8x8x8x8
  Level 1: 4x4x4x4
  Level 2: 2x2x2x2
self.grid_list:[[8, 8, 8, 8], [4, 4, 4, 4], [2, 2, 2, 2]]
torch.norm(self.b): 221.54107785906925
torch.norm(self.x): 272.9759413027144
torch.norm(_full_b): 221.54107785906925
torch.norm(_full_x): 272.9759413027144
torch.norm(full_Ax): 221.5410778587514
torch.norm(_full_Ax): 221.5410778587514
torch.norm(full_Ax-_full_b).item()/torch.norm(full_Ax).item(): 2.186681107909519e-09
torch.norm(_full_Ax-_full_b).item()/torch.norm(_full_Ax).item(): 2.1866811070766175e-09
torch.norm(full_Ax-_full_Ax).item()/torch.norm(full_Ax).item(): 1.7280821417995404e-16
rank,size: (0, 1)
